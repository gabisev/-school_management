#!/bin/bash

# Script de d√©ploiement pour School Management System
# Usage: ./deploy.sh [production|staging]

set -e

ENVIRONMENT=${1:-production}
echo "üöÄ D√©ploiement en mode: $ENVIRONMENT"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "manage.py" ]; then
    log_error "manage.py non trouv√©. Assurez-vous d'√™tre dans le r√©pertoire du projet."
    exit 1
fi

# V√©rifier que l'environnement virtuel est activ√©
if [ -z "$VIRTUAL_ENV" ]; then
    log_warn "Environnement virtuel non d√©tect√©. Activation recommand√©e."
fi

# Installer/mettre √† jour les d√©pendances
log_info "Installation des d√©pendances..."
pip install -r requirements.txt

if [ "$ENVIRONMENT" = "production" ]; then
    pip install -r requirements-dev.txt
fi

# Ex√©cuter les migrations
log_info "Ex√©cution des migrations..."
python manage.py makemigrations
python manage.py migrate

# Collecter les fichiers statiques
log_info "Collecte des fichiers statiques..."
python manage.py collectstatic --noinput

# Cr√©er le r√©pertoire de logs s'il n'existe pas
mkdir -p logs

# V√©rifier la configuration
log_info "V√©rification de la configuration..."
python manage.py check --deploy

# Red√©marrer les services (√† adapter selon votre configuration)
if [ "$ENVIRONMENT" = "production" ]; then
    log_info "Red√©marrage des services..."
    # Exemples de commandes (√† adapter selon votre setup)
    # sudo systemctl restart gunicorn
    # sudo systemctl restart nginx
    # sudo systemctl restart postgresql
fi

# Tests de sant√©
log_info "Tests de sant√©..."
python manage.py check

log_info "‚úÖ D√©ploiement termin√© avec succ√®s!"

# Afficher les informations utiles
echo ""
echo "üìã Informations utiles:"
echo "- URL: http://localhost:8000"
echo "- Admin: http://localhost:8000/admin"
echo "- Logs: tail -f logs/django.log"
echo "- Status: python manage.py runserver"
